        -:    0:Source:/Users/taveeh/Qt/5.14.2/clang_64/lib/QtCore.framework/Headers/qrefcount.h
        -:    0:Graph:/Users/taveeh/Desktop/University/Year 1/Semester 2/Object Oriented Programming/Assignment_9/cmake-build-debug/CMakeFiles/Assignment_9.dir/GUI.cpp.gcno
        -:    0:Data:/Users/taveeh/Desktop/University/Year 1/Semester 2/Object Oriented Programming/Assignment_9/cmake-build-debug/CMakeFiles/Assignment_9.dir/GUI.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/****************************************************************************
        -:    2:**
        -:    3:** Copyright (C) 2016 The Qt Company Ltd.
        -:    4:** Contact: https://www.qt.io/licensing/
        -:    5:**
        -:    6:** This file is part of the QtCore module of the Qt Toolkit.
        -:    7:**
        -:    8:** $QT_BEGIN_LICENSE:LGPL$
        -:    9:** Commercial License Usage
        -:   10:** Licensees holding valid commercial Qt licenses may use this file in
        -:   11:** accordance with the commercial license agreement provided with the
        -:   12:** Software or, alternatively, in accordance with the terms contained in
        -:   13:** a written agreement between you and The Qt Company. For licensing terms
        -:   14:** and conditions see https://www.qt.io/terms-conditions. For further
        -:   15:** information use the contact form at https://www.qt.io/contact-us.
        -:   16:**
        -:   17:** GNU Lesser General Public License Usage
        -:   18:** Alternatively, this file may be used under the terms of the GNU Lesser
        -:   19:** General Public License version 3 as published by the Free Software
        -:   20:** Foundation and appearing in the file LICENSE.LGPL3 included in the
        -:   21:** packaging of this file. Please review the following information to
        -:   22:** ensure the GNU Lesser General Public License version 3 requirements
        -:   23:** will be met: https://www.gnu.org/licenses/lgpl-3.0.html.
        -:   24:**
        -:   25:** GNU General Public License Usage
        -:   26:** Alternatively, this file may be used under the terms of the GNU
        -:   27:** General Public License version 2.0 or (at your option) the GNU General
        -:   28:** Public license version 3 or any later version approved by the KDE Free
        -:   29:** Qt Foundation. The licenses are as published by the Free Software
        -:   30:** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3
        -:   31:** included in the packaging of this file. Please review the following
        -:   32:** information to ensure the GNU General Public License requirements will
        -:   33:** be met: https://www.gnu.org/licenses/gpl-2.0.html and
        -:   34:** https://www.gnu.org/licenses/gpl-3.0.html.
        -:   35:**
        -:   36:** $QT_END_LICENSE$
        -:   37:**
        -:   38:****************************************************************************/
        -:   39:
        -:   40:#ifndef QREFCOUNT_H
        -:   41:#define QREFCOUNT_H
        -:   42:
        -:   43:#include <QtCore/qatomic.h>
        -:   44:
        -:   45:QT_BEGIN_NAMESPACE
        -:   46:
        -:   47:
        -:   48:namespace QtPrivate
        -:   49:{
        -:   50:
        -:   51:class RefCount
        -:   52:{
        -:   53:public:
        -:   54:    inline bool ref() noexcept {
        -:   55:        int count = atomic.loadRelaxed();
        -:   56:#if !defined(QT_NO_UNSHARABLE_CONTAINERS)
        -:   57:        if (count == 0) // !isSharable
        -:   58:            return false;
        -:   59:#endif
        -:   60:        if (count != -1) // !isStatic
        -:   61:            atomic.ref();
        -:   62:        return true;
        -:   63:    }
        -:   64:
       12:   65:    inline bool deref() noexcept {
       12:   65-block  0
       12:   66:        int count = atomic.loadRelaxed();
        -:   67:#if !defined(QT_NO_UNSHARABLE_CONTAINERS)
       12:   68:        if (count == 0) // !isSharable
       12:   68-block  0
    #####:   69:            return false;
    $$$$$:   69-block  0
        -:   70:#endif
       12:   71:        if (count == -1) // isStatic
       12:   71-block  0
    #####:   72:            return true;
    $$$$$:   72-block  0
       12:   73:        return atomic.deref();
       12:   73-block  0
       12:   74:    }
       12:   74-block  0
        -:   75:
        -:   76:#if !defined(QT_NO_UNSHARABLE_CONTAINERS)
        -:   77:    bool setSharable(bool sharable) noexcept
        -:   78:    {
        -:   79:        Q_ASSERT(!isShared());
        -:   80:        if (sharable)
        -:   81:            return atomic.testAndSetRelaxed(0, 1);
        -:   82:        else
        -:   83:            return atomic.testAndSetRelaxed(1, 0);
        -:   84:    }
        -:   85:
        -:   86:    bool isSharable() const noexcept
        -:   87:    {
        -:   88:        // Sharable === Shared ownership.
        -:   89:        return atomic.loadRelaxed() != 0;
        -:   90:    }
        -:   91:#endif
        -:   92:
        -:   93:    bool isStatic() const noexcept
        -:   94:    {
        -:   95:        // Persistent object, never deleted
        -:   96:        return atomic.loadRelaxed() == -1;
        -:   97:    }
        -:   98:
        -:   99:    bool isShared() const noexcept
        -:  100:    {
        -:  101:        int count = atomic.loadRelaxed();
        -:  102:        return (count != 1) && (count != 0);
        -:  103:    }
        -:  104:
        -:  105:    void initializeOwned() noexcept { atomic.storeRelaxed(1); }
        -:  106:    void initializeUnsharable() noexcept { atomic.storeRelaxed(0); }
        -:  107:
        -:  108:    QBasicAtomicInt atomic;
        -:  109:};
        -:  110:
        -:  111:}
        -:  112:
        -:  113:#define Q_REFCOUNT_INITIALIZE_STATIC { Q_BASIC_ATOMIC_INITIALIZER(-1) }
        -:  114:
        -:  115:QT_END_NAMESPACE
        -:  116:
        -:  117:#endif
