        -:    0:Source:/Users/taveeh/Desktop/University/Year 1/Semester 2/Object Oriented Programming/Assignment_5-6/Footage.cpp
        -:    0:Graph:/Users/taveeh/Desktop/University/Year 1/Semester 2/Object Oriented Programming/Assignment_5-6/cmake-build-debug/CMakeFiles/Assignment_5_6.dir/Footage.cpp.gcno
        -:    0:Data:/Users/taveeh/Desktop/University/Year 1/Semester 2/Object Oriented Programming/Assignment_5-6/cmake-build-debug/CMakeFiles/Assignment_5_6.dir/Footage.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by Octavian Custura on 18/03/2020.
        -:    3://
        -:    4:
        -:    5:#include "Footage.h"
        -:    6:
        -:    7:#include <utility>
        -:    8:
       78:    9:Date::Date(int day, int month, int year):day{day}, month{month}, year{year} {
       39:    9-block  0
       39:    9-block  1
        -:   10:
       78:   11:}
       39:   11-block  0
       39:   11-block  1
        -:   12:
        4:   13:int Date::getDay() const {
        4:   13-block  0
        4:   14:    return day;
        4:   14-block  0
        -:   15:}
        -:   16:
       46:   17:int Date::getMonth() const {
       46:   17-block  0
       46:   18:    return month;
       46:   18-block  0
        -:   19:}
        -:   20:
       54:   21:int Date::getYear() const {
       54:   21-block  0
       54:   22:    return year;
       54:   22-block  0
        -:   23:}
        -:   24:
       14:   25:bool operator<(const Date &compareDate1, const Date &compareDate2) {
       14:   25-block  0
       14:   26:    if (compareDate1.getYear() < compareDate2.getYear())
       14:   26-block  0
        2:   27:        return true;
        2:   27-block  0
       12:   28:    if (compareDate1.getYear() > compareDate2.getYear())
       12:   28-block  0
        1:   29:        return false;
        1:   29-block  0
       11:   30:    if (compareDate1.getMonth() < compareDate1.getMonth())
       11:   30-block  0
    #####:   31:        return true;
    $$$$$:   31-block  0
       11:   32:    if (compareDate1.getMonth() > compareDate2.getMonth())
       11:   32-block  0
       10:   33:        return false;
       10:   33-block  0
        1:   34:    return compareDate1.getDay() <= compareDate1.getDay();
        1:   34-block  0
       14:   35:}
       14:   35-block  0
        -:   36:
     6400:   37:Date::Date() {
     3200:   37-block  0
     3200:   37-block  1
     3200:   38:    day = 0;
     3200:   39:    year = 0;
     3200:   40:    month = 0;
     6400:   41:}
     3200:   41-block  0
     3200:   41-block  1
        -:   42:
        2:   43:std::string Date::toString() const {
        2:   43-block  0
        2:   44:    std::string stringDate;
        2:   45:    stringDate += std::to_string(day) + "-" + std::to_string(month) + "-" + std::to_string(year);
        2:   45-block  0
        2:   45-block  1
        2:   45-block  2
        2:   45-block  3
        2:   45-block  4
        2:   45-block  5
        2:   45-block  6
        2:   45-block  7
    $$$$$:   45-block  8
    $$$$$:   45-block  9
    $$$$$:   45-block 10
    $$$$$:   45-block 11
    $$$$$:   45-block 12
    $$$$$:   45-block 13
    $$$$$:   45-block 14
        2:   46:    return stringDate;
        2:   47:}
        2:   47-block  0
    $$$$$:   47-block  1
    $$$$$:   47-block  2
    $$$$$:   47-block  3
    $$$$$:   47-block  4
    $$$$$:   47-block  5
    $$$$$:   47-block  6
    $$$$$:   47-block  7
    $$$$$:   47-block  8
        2:   47-block  9
    $$$$$:   47-block 10
    $$$$$:   47-block 11
        -:   48:
        -:   49:
       46:   50:Footage::Footage(std::string title, std::string type, Date date, int numberAccessed, std::string link):title{std::move(title)}, type{std::move(type)}, date{date}, numberAccessed{numberAccessed}, link{std::move(link)} {
       23:   50-block  0
       23:   50-block  1
        -:   51:
       46:   52:}
       23:   52-block  0
       23:   52-block  1
        -:   53:
        1:   54:void Footage::changeType(std::string newType) {
        1:   54-block  0
        1:   55:    type = std::move(newType);
        1:   56:}
        1:   56-block  0
        -:   57:
        1:   58:void Footage::changeDate(Date newDate) {
        1:   58-block  0
        1:   59:    date = newDate;
        1:   60:}
        1:   60-block  0
        -:   61:
        1:   62:void Footage::changeAccessCount(int newAccessCount) {
        1:   62-block  0
        1:   63:    numberAccessed = newAccessCount;
        1:   64:}
        1:   64-block  0
        -:   65:
        1:   66:void Footage::changeLink(std::string newLink) {
        1:   66-block  0
        1:   67:    link = std::move(newLink);
        1:   68:}
        1:   68-block  0
        -:   69:
       17:   70:std::string Footage::getTitle() const {
       17:   70-block  0
       17:   71:    return title;
       17:   71-block  0
        -:   72:}
        -:   73:
        5:   74:std::string Footage::getType() const {
        5:   74-block  0
        5:   75:    return type;
        5:   75-block  0
        -:   76:}
        -:   77:
        6:   78:Date Footage::getDate() const {
        6:   78-block  0
        6:   79:    return date;
        6:   79-block  0
        -:   80:}
        -:   81:
        2:   82:int Footage::getAccessCount() const {
        2:   82-block  0
        2:   83:    return numberAccessed;
        2:   83-block  0
        -:   84:}
        -:   85:
        2:   86:std::string Footage::getLink() const {
        2:   86-block  0
        2:   87:    return link;
        2:   87-block  0
        -:   88:}
        -:   89:
     3196:   90:Footage::Footage() {
     1598:   90-block  0
     1598:   90-block  1
     1598:   90-block  2
     1598:   91:    title = "";
     1598:   91-block  0
     1598:   92:    type = "";
     1598:   92-block  0
     1598:   93:    date = Date();
     1598:   93-block  0
     1598:   94:    numberAccessed = 0;
     1598:   95:    link = "";
     1598:   95-block  0
     3196:   96:}
     1598:   96-block  0
    $$$$$:   96-block  1
    $$$$$:   96-block  2
    $$$$$:   96-block  3
    $$$$$:   96-block  4
     1598:   96-block  5
        -:   97:
        1:   98:std::string Footage::toString() const {
        1:   98-block  0
        1:   99:    std::string stringFootage;
        1:  100:    stringFootage += "Title: " + title + " Type: " + type + " Date: " + date.toString() + " Access count: " + std::to_string(numberAccessed) + " Link: " + link;
        1:  100-block  0
        1:  100-block  1
        1:  100-block  2
        1:  100-block  3
        1:  100-block  4
        1:  100-block  5
        1:  100-block  6
        1:  100-block  7
        1:  100-block  8
        1:  100-block  9
        1:  100-block 10
        1:  100-block 11
    $$$$$:  100-block 12
    $$$$$:  100-block 13
    $$$$$:  100-block 14
    $$$$$:  100-block 15
    $$$$$:  100-block 16
    $$$$$:  100-block 17
    $$$$$:  100-block 18
    $$$$$:  100-block 19
    $$$$$:  100-block 20
    $$$$$:  100-block 21
    $$$$$:  100-block 22
        1:  101:    return stringFootage;
        1:  102:}
        1:  102-block  0
    $$$$$:  102-block  1
    $$$$$:  102-block  2
    $$$$$:  102-block  3
    $$$$$:  102-block  4
    $$$$$:  102-block  5
    $$$$$:  102-block  6
    $$$$$:  102-block  7
    $$$$$:  102-block  8
    $$$$$:  102-block  9
    $$$$$:  102-block 10
    $$$$$:  102-block 11
    $$$$$:  102-block 12
        1:  102-block 13
    $$$$$:  102-block 14
    $$$$$:  102-block 15
