        -:    0:Source:/Users/taveeh/Desktop/University/Year 1/Semester 2/Object Oriented Programming/Assignment_7-8/FileRepository.cpp
        -:    0:Graph:/Users/taveeh/Desktop/University/Year 1/Semester 2/Object Oriented Programming/Assignment_7-8/cmake-build-debug/CMakeFiles/Assignment_7_8.dir/FileRepository.cpp.gcno
        -:    0:Data:/Users/taveeh/Desktop/University/Year 1/Semester 2/Object Oriented Programming/Assignment_7-8/cmake-build-debug/CMakeFiles/Assignment_7_8.dir/FileRepository.cpp.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1://
        -:    2:// Created by Octavian Custura on 12/04/2020.
        -:    3://
        -:    4:
        -:    5:#include "FileRepository.h"
        -:    6:#include <fstream>
        -:    7:#include <vector>
        -:    8:#include <iostream>
        -:    9:
       54:   10:FileRepository::FileRepository(const std::string& file): fileName(file), currentElement(0) {
       27:   10-block  0
       27:   10-block  1
       27:   11:	std::ifstream doesFileExist(file);
       27:   11-block  0
       27:   12:	if (!doesFileExist) {
       27:   12-block  0
       27:   12-block  1
    #####:   13:		std::ofstream createFileToExist(file);
    $$$$$:   13-block  0
    #####:   14:		createFileToExist.close();
    $$$$$:   14-block  0
    #####:   15:	}
    $$$$$:   15-block  0
    $$$$$:   15-block  1
       27:   16:	doesFileExist.close();
       27:   16-block  0
       54:   17:}
    $$$$$:   17-block  0
    $$$$$:   17-block  1
       27:   17-block  2
    $$$$$:   17-block  3
    $$$$$:   17-block  4
    $$$$$:   17-block  5
       27:   17-block  6
        -:   18:
       28:   19:void FileRepository::addFootage(const Footage &newFootage) {
       28:   19-block  0
       28:   20:	Footage footage;
       28:   21:	std::ifstream fileIn(fileName);
       28:   21-block  0
       28:   22:	std::vector<Footage> arrayOfFootage;
       40:   23:	while (fileIn >> footage) {
       28:   23-block  0
       40:   23-block  1
       40:   23-block  2
       40:   23-block  3
       12:   23-block  4
       14:   24:		if (footage.getTitle().empty()) break;
       14:   24-block  0
       14:   24-block  1
    $$$$$:   24-block  2
       14:   25:		if (footage.getTitle() == newFootage.getTitle()) {
       14:   25-block  0
       14:   25-block  1
       14:   25-block  2
    $$$$$:   25-block  3
        2:   26:			throw std::exception();
        2:   26-block  0
        -:   27:		}
       12:   28:		arrayOfFootage.push_back(footage);
       12:   28-block  0
        -:   29:	}
       26:   30:	fileIn.close();
       26:   30-block  0
       26:   31:	arrayOfFootage.push_back(newFootage);
       26:   31-block  0
       26:   32:	std::ofstream fileOut(fileName);
       26:   32-block  0
       64:   33:	for (const auto& footageElement: arrayOfFootage) {
       26:   33-block  0
       64:   33-block  1
       38:   33-block  2
       38:   33-block  3
       38:   34:		fileOut << footageElement;
       38:   34-block  0
        -:   35:	}
       26:   36:	fileOut.close();
       26:   36-block  0
       28:   37:}
    $$$$$:   37-block  0
        2:   37-block  1
    $$$$$:   37-block  2
       26:   37-block  3
        2:   37-block  4
        2:   37-block  5
        2:   37-block  6
        -:   38:
        4:   39:void FileRepository::deleteFootage(const std::string &titleToBeRemoved) {
        4:   39-block  0
        4:   40:	std::vector<Footage> arrayOfFootage;
        4:   41:	Footage footage;
        4:   41-block  0
        4:   42:	std::ifstream fileIn(fileName);
        4:   42-block  0
        4:   43:	bool ok = true;
        4:   44:	std::string lineFootage;
        7:   45:	while (fileIn >> footage) {
        4:   45-block  0
        7:   45-block  1
        7:   45-block  2
        7:   45-block  3
        3:   45-block  4
        3:   46:		if (footage.getTitle() == titleToBeRemoved) {
        3:   46-block  0
        3:   46-block  1
        2:   47:			ok = false;
        3:   48:		}else arrayOfFootage.push_back(footage);
        2:   48-block  0
        1:   48-block  1
        -:   49:	}
        4:   50:	if (ok) {
        4:   50-block  0
        2:   51:		throw std::exception();
        2:   51-block  0
        -:   52:	}
        2:   53:	fileIn.close();
        2:   53-block  0
        2:   54:	std::ofstream fileOut(fileName);
        2:   54-block  0
        2:   55:	for (const auto& footageToFile: arrayOfFootage) fileOut << footageToFile;
        2:   55-block  0
        2:   55-block  1
    $$$$$:   55-block  2
    $$$$$:   55-block  3
    $$$$$:   55-block  4
        2:   56:	fileOut.close();
        2:   56-block  0
        4:   57:}
    $$$$$:   57-block  0
    $$$$$:   57-block  1
        2:   57-block  2
    $$$$$:   57-block  3
        2:   57-block  4
        2:   57-block  5
        2:   57-block  6
        2:   57-block  7
        2:   57-block  8
        -:   58:
        3:   59:void FileRepository::updateFootage(const Footage &newFootage) {
        3:   59-block  0
        3:   60:	std::vector<Footage> arrayOfFootage;
        3:   61:	Footage footage;
        3:   61-block  0
        3:   62:	std::ifstream fileIn(fileName);
        3:   62-block  0
        3:   63:	bool ok = true;
        6:   64:	while (fileIn >> footage) {
        3:   64-block  0
        6:   64-block  1
        6:   64-block  2
        6:   64-block  3
        3:   64-block  4
        3:   65:		if (footage.getTitle() == newFootage.getTitle()) {
        3:   65-block  0
        3:   65-block  1
        3:   65-block  2
    $$$$$:   65-block  3
        2:   66:			arrayOfFootage.push_back(newFootage);
        2:   66-block  0
        2:   67:			ok = false;
        3:   68:		} else arrayOfFootage.push_back(footage);
        2:   68-block  0
        1:   68-block  1
        -:   69:	}
        3:   70:	if (ok) throw std::exception();
        3:   70-block  0
        1:   70-block  1
        2:   71:	fileIn.close();
        2:   71-block  0
        2:   72:	std::ofstream fileOut(fileName);
        2:   72-block  0
        4:   73:	for (const auto& footageToFile: arrayOfFootage) {
        2:   73-block  0
        4:   73-block  1
        2:   73-block  2
        2:   73-block  3
        2:   74:		fileOut << footageToFile;
        2:   74-block  0
        -:   75:	}
        2:   76:	fileOut.close();
        2:   76-block  0
        3:   77:}
    $$$$$:   77-block  0
    $$$$$:   77-block  1
        1:   77-block  2
    $$$$$:   77-block  3
        2:   77-block  4
        1:   77-block  5
        1:   77-block  6
        1:   77-block  7
        1:   77-block  8
        -:   78:
       13:   79:std::vector<Footage> FileRepository::getAllFootage() {
       13:   79-block  0
       13:   80:	std::vector<Footage> allFootage;
       13:   81:	std::ifstream fileIn(fileName);
       13:   81-block  0
       13:   82:	Footage footage;
       13:   82-block  0
       30:   83:	while (fileIn >> footage) {
       13:   83-block  0
       30:   83-block  1
       30:   83-block  2
       30:   83-block  3
       17:   83-block  4
       17:   84:		allFootage.push_back(footage);
       17:   84-block  0
        -:   85:	}
       13:   86:	return allFootage;
       13:   87:}
    $$$$$:   87-block  0
    $$$$$:   87-block  1
    $$$$$:   87-block  2
       13:   87-block  3
    $$$$$:   87-block  4
    $$$$$:   87-block  5
       13:   87-block  6
    $$$$$:   87-block  7
    $$$$$:   87-block  8
        -:   88:
        3:   89:Footage FileRepository::getCurrentElement() {
        3:   89-block  0
        3:   90:	std::vector<Footage> arrayOfTapes = getAllFootage();
        3:   91:	if (currentElement == arrayOfTapes.size()) 		currentElement = 0;
        3:   91-block  0
        1:   91-block  1
        3:   92:	return *(arrayOfTapes.begin() + currentElement++);
        3:   92-block  0
        3:   93:}
        3:   93-block  0
    $$$$$:   93-block  1
    $$$$$:   93-block  2
        -:   94:
        -:   95://void FileRepository::setPath(const std::string& newFileName) {
        -:   96://	if (fileName == " ") {
        -:   97://		throw std::exception();
        -:   98://	}
        -:   99://	std::ofstream createFileIfNotExist(fileName);
        -:  100://	createFileIfNotExist.close();
        -:  101://	fileName = newFileName;
        -:  102://}
        -:  103://
        -:  104:
        -:  105:
